VERSION := $(shell git describe --tags | sed -e 's/^v//g' | awk -F "-" '{print $$1}')
ITERATION := $(shell git describe --tags --long | awk -F "-" '{print $$2}')
GO_VERSION=$(shell gobuild -v)
GO := $(or $(GOROOT),/usr/lib/go)/bin/go
PROCS := $(shell nproc)
cores:
	@echo "cores: $(PROCS)"
bench:
	go test -bench .
bench-record:
	$(GO) test -bench . > "benchmarks/stun-go-$(GO_VERSION).txt"
lint:
	@golangci-lint run ./...
	@echo "ok"
escape:
	@echo "Not escapes, except autogenerated:"
	@go build -gcflags '-m -l' 2>&1 \
	| grep -v "<autogenerated>" \
	| grep escapes
format:
	goimports -w .
bench-compare:
	go test -bench . > bench.go-16
	go-tip test -bench . > bench.go-tip
	@benchcmp bench.go-16 bench.go-tip
install:
	go get gortc.io/api
	go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
docker-build:
	docker build -t pion/stun .
test-integration:
	@cd e2e && bash ./test.sh
prepush: assert test lint test-integration
check-api:
	@cd api && bash ./check.sh
assert:
	bash .github/assert-contributors.sh
	bash .github/lint-disallowed-functions-in-library.sh
	bash .github/lint-commit-message.sh
test:
	@./go.test.sh
clean:
